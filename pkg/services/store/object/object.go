// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: object.proto

package object


// Will be replaced with something from the SDK
type UserInfo struct {
	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`      // internal grafana ID
	Login string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"` // string ID?
}

// Raw saved object metadata
type RawObject struct {
	// Unique ID for this object
	UID string `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	// Identify the object kind.  This kind will be used to apply a schema to the body and
	// will trigger additional indexing behavior.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// Time in millies since epoch that the object was modified
	Modified int64 `protobuf:"varint,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// Who modified the object
	ModifiedBy *UserInfo `protobuf:"bytes,5,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	// Content Length
	Size int64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// MD5 digest of the Body
	ETag string `protobuf:"bytes,8,opt,name=ETag,proto3" json:"ETag,omitempty"`
	// Raw bytes of the storage object.  The kind+schema will ensure
	Body []byte `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`
	// A small set of properties managed by raw storage layer.  The kind+schema will define val
	Properties map[string]string `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// object version (might be commit hash, or number)
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// last time the object status was checked with an external system (provisioning/git)
	SyncTime int64 `protobuf:"varint,12,opt,name=syncTime,proto3" json:"syncTime,omitempty"`
	// optional "save" or "commit" message from the author
	Comment string `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
}

// Searchable fields extracted from the object
type ObjectErrorInfo struct {
	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // TODO... registry somewhere...  should be limited to most severe issues
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

type ExternalReference struct {
	// datasource, panel
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// prometheus / heatmap
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Unique ID for this object
	UID string `protobuf:"bytes,3,opt,name=UID,proto3" json:"UID,omitempty"`
}
